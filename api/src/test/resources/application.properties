spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
logging.level.root=ERROR
logging.level.org.hibernate=ERROR
logging.level.ca.bc.gov.educ.penreg=INFO
#spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.show-sql=false
# SQL statements and parameters
#logging.level.org.hibernate.type.descriptor.sql=trace
spring.main.allow-bean-definition-overriding=true
spring.flyway.enabled=false
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://test
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://test
#Disable the cron for unit testing
scheduled.jobs.extract.unprocessed.pen.web.blobs.cron=-
scheduled.jobs.extract.unprocessed.penwebfiles.pen.web.blobs.cron=-

#Need to make sure that this value is set properly based on the above value of cron expression.
#EX: If the cron is set to run every 10 minutes, make sure this is set to 9 minutes
scheduled.jobs.extract.unprocessed.pen.web.blobs.cron.lockAtLeastFor=0s

#Need to make sure that this value is set properly based on the above value of cron expression.
#EX: If the cron is set to run every 10 minutes, make sure this is set to 9 minutes 55 Seconds.
scheduled.jobs.extract.unprocessed.pen.web.blobs.cron.lockAtMostFor=0s
spring.jpa.properties.hibernate.dialect.oracle.prefer_long_raw=true
scheduled.jobs.extract.uncompleted.sagas.cron=-
scheduled.jobs.extract.uncompleted.sagas.cron.lockAtLeastFor="55s"
scheduled.jobs.extract.uncompleted.sagas.cron.lockAtMostFor="58s"
scheduled.jobs.extract.unprocessed.students.cron=-
scheduled.jobs.extract.unprocessed.students.cron.lockAtLeastFor="240s"
scheduled.jobs.extract.unprocessed.students.cron.lockAtMostFor="290s"

#Client details to get token to make api calls.
client.id=123
client.secret=123
url.token=http://abcxyz.com

#Below are for making API calls to Student after getting the token.
url.api.student=http://abcxyz.com
url.api.pen.services=http://abcxyz.com
url.api.school=http://abcxyz.com
repeat.time.window=60
repeat.time.window.psi=366
repeat.time.window.k12=60
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=20
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
nats.server=nats://localhost:4220
nats.maxReconnect=60
nats.connectionName=pen-reg-batch-api
purge.records.saga.after.days=0
scheduled.jobs.purge.old.saga.records.cron=-
soft.deleted.batch.records.retention.days=20
scheduled.jobs.purge.soft.deleted.batch.records.cron=-
#Number of records in batch before it's held back
number.records.for.batch.hold=4000
notification.email.school.error.unformatted.file.from.email=test@abc.com
pen.coordinator.email=test@abc.com
pen.coordinator.mailing.address=mailing address
pen.coordinator.telephone=5555555555
pen.coordinator.facsimile=3333333333
spring.data.redis.host=localhost
spring.data.redis.port=6370
scheduled.jobs.mark.processed.batches.active.cron=-
scheduled.jobs.mark.processed.batches.active.cron.lockAtLeastFor=1s
scheduled.jobs.mark.processed.batches.active.cron.lockAtMostFor=1s
scheduled.jobs.process.loaded.batches.for.repeats.cron=-
scheduled.jobs.process.loaded.batches.for.repeats.cron.lockAtLeastFor=1s
scheduled.jobs.process.loaded.batches.for.repeats.cron.lockAtMostFor=1s
initialization.background.enabled=false
schedule.jobs.load.pen.coordinators.cron=-
spring.jackson.deserialization.fail-on-unknown-properties=false
schedule.jobs.load.school.cron=-
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} | [%5p] | [%t] | [%logger{36}] | [%replace(%msg){'[\n\r\"]',''} %X{httpEvent} %X{messageEvent}] | %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n
student.threshold.generate.pdf=2000
threads.min.subscriber=2
threads.max.subscriber=2
sagas.max.pending=100
sagas.max.parallel=100
